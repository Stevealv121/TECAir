// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TEC_Air_API_Model;

#nullable disable

namespace TEC_Air_API_Model.Migrations
{
    [DbContext(typeof(TecAirContext))]
    partial class TecAirContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("TEC_Air_API_Model.Airplane", b =>
                {
                    b.Property<string>("plate")
                        .HasColumnType("text");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("plate");

                    b.ToTable("AIRPLANE");
                });

            modelBuilder.Entity("TEC_Air_API_Model.AppliesTo", b =>
                {
                    b.Property<int>("final_price")
                        .HasColumnType("integer");

                    b.Property<int>("flight_id")
                        .HasColumnType("integer");

                    b.Property<int>("promotion_code")
                        .HasColumnType("integer");

                    b.HasIndex("flight_id");

                    b.HasIndex("promotion_code");

                    b.ToTable("AppliesTo");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Baggage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("weight")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("BAGGAGE");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Books", b =>
                {
                    b.Property<int>("flight_id")
                        .HasColumnType("integer");

                    b.Property<int?>("flightid")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.Property<int?>("userid")
                        .HasColumnType("integer");

                    b.HasIndex("flightid");

                    b.HasIndex("userid");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Flight", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<string>("airplane_plate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("boarding_gate")
                        .HasColumnType("integer");

                    b.Property<string>("duration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.Property<int>("route_code")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.HasKey("id");

                    b.HasIndex("airplane_plate");

                    b.HasIndex("route_code");

                    b.ToTable("FLIGHT");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Flight_Stopover", b =>
                {
                    b.Property<int>("flight_id")
                        .HasColumnType("integer");

                    b.Property<string>("stopover")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("flight_id");

                    b.ToTable("Flight_Stopover");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Has", b =>
                {
                    b.Property<int>("baggage_id")
                        .HasColumnType("integer");

                    b.Property<int>("flight_id")
                        .HasColumnType("integer");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasIndex("baggage_id");

                    b.HasIndex("flight_id");

                    b.HasIndex("user_id");

                    b.ToTable("Has");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Promotion", b =>
                {
                    b.Property<int>("promotion_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("promotion_code"));

                    b.Property<int>("day")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("discount")
                        .HasColumnType("integer");

                    b.Property<int>("month")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("year")
                        .HasColumnType("integer");

                    b.HasKey("promotion_code");

                    b.ToTable("PROMOTION");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Role", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("name");

                    b.ToTable("ROLE");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Route", b =>
                {
                    b.Property<int>("route_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("route_code"));

                    b.Property<int>("day")
                        .HasColumnType("integer");

                    b.Property<string>("destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("hours")
                        .HasColumnType("integer");

                    b.Property<string>("minutes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("month")
                        .HasColumnType("integer");

                    b.Property<string>("origin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("year")
                        .HasColumnType("integer");

                    b.HasKey("route_code");

                    b.ToTable("ROUTE");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Seat", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<string>("airplane_plate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("state")
                        .HasColumnType("boolean");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("airplane_plate");

                    b.HasIndex("user_id");

                    b.ToTable("SEAT");
                });

            modelBuilder.Entity("TEC_Air_API_Model.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("first_surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("phone")
                        .HasColumnType("integer");

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("second_name")
                        .HasColumnType("text");

                    b.Property<string>("second_surname")
                        .HasColumnType("text");

                    b.Property<int?>("student_id")
                        .HasColumnType("integer");

                    b.Property<string>("university")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("role_name");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("TEC_Air_API_Model.AppliesTo", b =>
                {
                    b.HasOne("TEC_Air_API_Model.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("flight_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TEC_Air_API_Model.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("promotion_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Books", b =>
                {
                    b.HasOne("TEC_Air_API_Model.Flight", "flight")
                        .WithMany()
                        .HasForeignKey("flightid");

                    b.HasOne("TEC_Air_API_Model.User", "user")
                        .WithMany()
                        .HasForeignKey("userid");

                    b.Navigation("flight");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Flight", b =>
                {
                    b.HasOne("TEC_Air_API_Model.Airplane", "Airplane")
                        .WithMany()
                        .HasForeignKey("airplane_plate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TEC_Air_API_Model.Route", "Route")
                        .WithMany()
                        .HasForeignKey("route_code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airplane");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Flight_Stopover", b =>
                {
                    b.HasOne("TEC_Air_API_Model.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("flight_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Has", b =>
                {
                    b.HasOne("TEC_Air_API_Model.Baggage", "Baggage")
                        .WithMany()
                        .HasForeignKey("baggage_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TEC_Air_API_Model.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("flight_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TEC_Air_API_Model.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baggage");

                    b.Navigation("Flight");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TEC_Air_API_Model.Seat", b =>
                {
                    b.HasOne("TEC_Air_API_Model.Airplane", "Airplane")
                        .WithMany()
                        .HasForeignKey("airplane_plate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TEC_Air_API_Model.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airplane");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TEC_Air_API_Model.User", b =>
                {
                    b.HasOne("TEC_Air_API_Model.Role", "Role")
                        .WithMany()
                        .HasForeignKey("role_name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
